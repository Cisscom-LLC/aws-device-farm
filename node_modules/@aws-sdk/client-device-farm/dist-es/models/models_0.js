import { SENSITIVE_STRING } from "@aws-sdk/smithy-client";
import { DeviceFarmServiceException as __BaseException } from "./DeviceFarmServiceException";
export var DevicePlatform;
(function (DevicePlatform) {
    DevicePlatform["ANDROID"] = "ANDROID";
    DevicePlatform["IOS"] = "IOS";
})(DevicePlatform || (DevicePlatform = {}));
export class ArgumentException extends __BaseException {
    constructor(opts) {
        super({
            name: "ArgumentException",
            $fault: "client",
            ...opts,
        });
        this.name = "ArgumentException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ArgumentException.prototype);
    }
}
export var ArtifactType;
(function (ArtifactType) {
    ArtifactType["APPIUM_JAVA_OUTPUT"] = "APPIUM_JAVA_OUTPUT";
    ArtifactType["APPIUM_JAVA_XML_OUTPUT"] = "APPIUM_JAVA_XML_OUTPUT";
    ArtifactType["APPIUM_PYTHON_OUTPUT"] = "APPIUM_PYTHON_OUTPUT";
    ArtifactType["APPIUM_PYTHON_XML_OUTPUT"] = "APPIUM_PYTHON_XML_OUTPUT";
    ArtifactType["APPIUM_SERVER_OUTPUT"] = "APPIUM_SERVER_OUTPUT";
    ArtifactType["APPLICATION_CRASH_REPORT"] = "APPLICATION_CRASH_REPORT";
    ArtifactType["AUTOMATION_OUTPUT"] = "AUTOMATION_OUTPUT";
    ArtifactType["CALABASH_JAVA_XML_OUTPUT"] = "CALABASH_JAVA_XML_OUTPUT";
    ArtifactType["CALABASH_JSON_OUTPUT"] = "CALABASH_JSON_OUTPUT";
    ArtifactType["CALABASH_PRETTY_OUTPUT"] = "CALABASH_PRETTY_OUTPUT";
    ArtifactType["CALABASH_STANDARD_OUTPUT"] = "CALABASH_STANDARD_OUTPUT";
    ArtifactType["CUSTOMER_ARTIFACT"] = "CUSTOMER_ARTIFACT";
    ArtifactType["CUSTOMER_ARTIFACT_LOG"] = "CUSTOMER_ARTIFACT_LOG";
    ArtifactType["DEVICE_LOG"] = "DEVICE_LOG";
    ArtifactType["EXERCISER_MONKEY_OUTPUT"] = "EXERCISER_MONKEY_OUTPUT";
    ArtifactType["EXPLORER_EVENT_LOG"] = "EXPLORER_EVENT_LOG";
    ArtifactType["EXPLORER_SUMMARY_LOG"] = "EXPLORER_SUMMARY_LOG";
    ArtifactType["INSTRUMENTATION_OUTPUT"] = "INSTRUMENTATION_OUTPUT";
    ArtifactType["MESSAGE_LOG"] = "MESSAGE_LOG";
    ArtifactType["RESULT_LOG"] = "RESULT_LOG";
    ArtifactType["SCREENSHOT"] = "SCREENSHOT";
    ArtifactType["SERVICE_LOG"] = "SERVICE_LOG";
    ArtifactType["TESTSPEC_OUTPUT"] = "TESTSPEC_OUTPUT";
    ArtifactType["UNKNOWN"] = "UNKNOWN";
    ArtifactType["VIDEO"] = "VIDEO";
    ArtifactType["VIDEO_LOG"] = "VIDEO_LOG";
    ArtifactType["WEBKIT_LOG"] = "WEBKIT_LOG";
    ArtifactType["XCTEST_LOG"] = "XCTEST_LOG";
})(ArtifactType || (ArtifactType = {}));
export var ArtifactCategory;
(function (ArtifactCategory) {
    ArtifactCategory["FILE"] = "FILE";
    ArtifactCategory["LOG"] = "LOG";
    ArtifactCategory["SCREENSHOT"] = "SCREENSHOT";
})(ArtifactCategory || (ArtifactCategory = {}));
export var BillingMethod;
(function (BillingMethod) {
    BillingMethod["METERED"] = "METERED";
    BillingMethod["UNMETERED"] = "UNMETERED";
})(BillingMethod || (BillingMethod = {}));
export class CannotDeleteException extends __BaseException {
    constructor(opts) {
        super({
            name: "CannotDeleteException",
            $fault: "client",
            ...opts,
        });
        this.name = "CannotDeleteException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CannotDeleteException.prototype);
    }
}
export var DeviceAttribute;
(function (DeviceAttribute) {
    DeviceAttribute["APPIUM_VERSION"] = "APPIUM_VERSION";
    DeviceAttribute["ARN"] = "ARN";
    DeviceAttribute["AVAILABILITY"] = "AVAILABILITY";
    DeviceAttribute["FLEET_TYPE"] = "FLEET_TYPE";
    DeviceAttribute["FORM_FACTOR"] = "FORM_FACTOR";
    DeviceAttribute["INSTANCE_ARN"] = "INSTANCE_ARN";
    DeviceAttribute["INSTANCE_LABELS"] = "INSTANCE_LABELS";
    DeviceAttribute["MANUFACTURER"] = "MANUFACTURER";
    DeviceAttribute["MODEL"] = "MODEL";
    DeviceAttribute["OS_VERSION"] = "OS_VERSION";
    DeviceAttribute["PLATFORM"] = "PLATFORM";
    DeviceAttribute["REMOTE_ACCESS_ENABLED"] = "REMOTE_ACCESS_ENABLED";
    DeviceAttribute["REMOTE_DEBUG_ENABLED"] = "REMOTE_DEBUG_ENABLED";
})(DeviceAttribute || (DeviceAttribute = {}));
export var RuleOperator;
(function (RuleOperator) {
    RuleOperator["CONTAINS"] = "CONTAINS";
    RuleOperator["EQUALS"] = "EQUALS";
    RuleOperator["GREATER_THAN"] = "GREATER_THAN";
    RuleOperator["GREATER_THAN_OR_EQUALS"] = "GREATER_THAN_OR_EQUALS";
    RuleOperator["IN"] = "IN";
    RuleOperator["LESS_THAN"] = "LESS_THAN";
    RuleOperator["LESS_THAN_OR_EQUALS"] = "LESS_THAN_OR_EQUALS";
    RuleOperator["NOT_IN"] = "NOT_IN";
})(RuleOperator || (RuleOperator = {}));
export var DevicePoolType;
(function (DevicePoolType) {
    DevicePoolType["CURATED"] = "CURATED";
    DevicePoolType["PRIVATE"] = "PRIVATE";
})(DevicePoolType || (DevicePoolType = {}));
export class LimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
    }
}
export class NotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "NotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "NotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NotFoundException.prototype);
    }
}
export class ServiceAccountException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceAccountException",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceAccountException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceAccountException.prototype);
    }
}
export var NetworkProfileType;
(function (NetworkProfileType) {
    NetworkProfileType["CURATED"] = "CURATED";
    NetworkProfileType["PRIVATE"] = "PRIVATE";
})(NetworkProfileType || (NetworkProfileType = {}));
export class TagOperationException extends __BaseException {
    constructor(opts) {
        super({
            name: "TagOperationException",
            $fault: "client",
            ...opts,
        });
        this.name = "TagOperationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TagOperationException.prototype);
        this.resourceName = opts.resourceName;
    }
}
export var InteractionMode;
(function (InteractionMode) {
    InteractionMode["INTERACTIVE"] = "INTERACTIVE";
    InteractionMode["NO_VIDEO"] = "NO_VIDEO";
    InteractionMode["VIDEO_ONLY"] = "VIDEO_ONLY";
})(InteractionMode || (InteractionMode = {}));
export var DeviceAvailability;
(function (DeviceAvailability) {
    DeviceAvailability["AVAILABLE"] = "AVAILABLE";
    DeviceAvailability["BUSY"] = "BUSY";
    DeviceAvailability["HIGHLY_AVAILABLE"] = "HIGHLY_AVAILABLE";
    DeviceAvailability["TEMPORARY_NOT_AVAILABLE"] = "TEMPORARY_NOT_AVAILABLE";
})(DeviceAvailability || (DeviceAvailability = {}));
export var DeviceFormFactor;
(function (DeviceFormFactor) {
    DeviceFormFactor["PHONE"] = "PHONE";
    DeviceFormFactor["TABLET"] = "TABLET";
})(DeviceFormFactor || (DeviceFormFactor = {}));
export var InstanceStatus;
(function (InstanceStatus) {
    InstanceStatus["AVAILABLE"] = "AVAILABLE";
    InstanceStatus["IN_USE"] = "IN_USE";
    InstanceStatus["NOT_AVAILABLE"] = "NOT_AVAILABLE";
    InstanceStatus["PREPARING"] = "PREPARING";
})(InstanceStatus || (InstanceStatus = {}));
export var ExecutionResult;
(function (ExecutionResult) {
    ExecutionResult["ERRORED"] = "ERRORED";
    ExecutionResult["FAILED"] = "FAILED";
    ExecutionResult["PASSED"] = "PASSED";
    ExecutionResult["PENDING"] = "PENDING";
    ExecutionResult["SKIPPED"] = "SKIPPED";
    ExecutionResult["STOPPED"] = "STOPPED";
    ExecutionResult["WARNED"] = "WARNED";
})(ExecutionResult || (ExecutionResult = {}));
export var ExecutionStatus;
(function (ExecutionStatus) {
    ExecutionStatus["COMPLETED"] = "COMPLETED";
    ExecutionStatus["PENDING"] = "PENDING";
    ExecutionStatus["PENDING_CONCURRNECY"] = "PENDING_CONCURRENCY";
    ExecutionStatus["PENDING_DEVICE"] = "PENDING_DEVICE";
    ExecutionStatus["PREPARING"] = "PREPARING";
    ExecutionStatus["PROCESSING"] = "PROCESSING";
    ExecutionStatus["RUNNING"] = "RUNNING";
    ExecutionStatus["SCHEDULING"] = "SCHEDULING";
    ExecutionStatus["STOPPING"] = "STOPPING";
})(ExecutionStatus || (ExecutionStatus = {}));
export class InternalServiceException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServiceException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServiceException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServiceException.prototype);
    }
}
export var UploadType;
(function (UploadType) {
    UploadType["ANDROID_APP"] = "ANDROID_APP";
    UploadType["APPIUM_JAVA_JUNIT_TEST_PACKAGE"] = "APPIUM_JAVA_JUNIT_TEST_PACKAGE";
    UploadType["APPIUM_JAVA_JUNIT_TEST_SPEC"] = "APPIUM_JAVA_JUNIT_TEST_SPEC";
    UploadType["APPIUM_JAVA_TESTNG_TEST_PACKAGE"] = "APPIUM_JAVA_TESTNG_TEST_PACKAGE";
    UploadType["APPIUM_JAVA_TESTNG_TEST_SPEC"] = "APPIUM_JAVA_TESTNG_TEST_SPEC";
    UploadType["APPIUM_NODE_TEST_PACKAGE"] = "APPIUM_NODE_TEST_PACKAGE";
    UploadType["APPIUM_NODE_TEST_SPEC"] = "APPIUM_NODE_TEST_SPEC";
    UploadType["APPIUM_PYTHON_TEST_PACKAGE"] = "APPIUM_PYTHON_TEST_PACKAGE";
    UploadType["APPIUM_PYTHON_TEST_SPEC"] = "APPIUM_PYTHON_TEST_SPEC";
    UploadType["APPIUM_RUBY_TEST_PACKAGE"] = "APPIUM_RUBY_TEST_PACKAGE";
    UploadType["APPIUM_RUBY_TEST_SPEC"] = "APPIUM_RUBY_TEST_SPEC";
    UploadType["APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE"] = "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE";
    UploadType["APPIUM_WEB_JAVA_JUNIT_TEST_SPEC"] = "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC";
    UploadType["APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE"] = "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE";
    UploadType["APPIUM_WEB_JAVA_TESTNG_TEST_SPEC"] = "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC";
    UploadType["APPIUM_WEB_NODE_TEST_PACKAGE"] = "APPIUM_WEB_NODE_TEST_PACKAGE";
    UploadType["APPIUM_WEB_NODE_TEST_SPEC"] = "APPIUM_WEB_NODE_TEST_SPEC";
    UploadType["APPIUM_WEB_PYTHON_TEST_PACKAGE"] = "APPIUM_WEB_PYTHON_TEST_PACKAGE";
    UploadType["APPIUM_WEB_PYTHON_TEST_SPEC"] = "APPIUM_WEB_PYTHON_TEST_SPEC";
    UploadType["APPIUM_WEB_RUBY_TEST_PACKAGE"] = "APPIUM_WEB_RUBY_TEST_PACKAGE";
    UploadType["APPIUM_WEB_RUBY_TEST_SPEC"] = "APPIUM_WEB_RUBY_TEST_SPEC";
    UploadType["CALABASH_TEST_PACKAGE"] = "CALABASH_TEST_PACKAGE";
    UploadType["EXTERNAL_DATA"] = "EXTERNAL_DATA";
    UploadType["INSTRUMENTATION_TEST_PACKAGE"] = "INSTRUMENTATION_TEST_PACKAGE";
    UploadType["INSTRUMENTATION_TEST_SPEC"] = "INSTRUMENTATION_TEST_SPEC";
    UploadType["IOS_APP"] = "IOS_APP";
    UploadType["UIAUTOMATION_TEST_PACKAGE"] = "UIAUTOMATION_TEST_PACKAGE";
    UploadType["UIAUTOMATOR_TEST_PACKAGE"] = "UIAUTOMATOR_TEST_PACKAGE";
    UploadType["WEB_APP"] = "WEB_APP";
    UploadType["XCTEST_TEST_PACKAGE"] = "XCTEST_TEST_PACKAGE";
    UploadType["XCTEST_UI_TEST_PACKAGE"] = "XCTEST_UI_TEST_PACKAGE";
    UploadType["XCTEST_UI_TEST_SPEC"] = "XCTEST_UI_TEST_SPEC";
})(UploadType || (UploadType = {}));
export var UploadCategory;
(function (UploadCategory) {
    UploadCategory["CURATED"] = "CURATED";
    UploadCategory["PRIVATE"] = "PRIVATE";
})(UploadCategory || (UploadCategory = {}));
export var UploadStatus;
(function (UploadStatus) {
    UploadStatus["FAILED"] = "FAILED";
    UploadStatus["INITIALIZED"] = "INITIALIZED";
    UploadStatus["PROCESSING"] = "PROCESSING";
    UploadStatus["SUCCEEDED"] = "SUCCEEDED";
})(UploadStatus || (UploadStatus = {}));
export var CurrencyCode;
(function (CurrencyCode) {
    CurrencyCode["USD"] = "USD";
})(CurrencyCode || (CurrencyCode = {}));
export class InvalidOperationException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidOperationException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidOperationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidOperationException.prototype);
    }
}
export var TestType;
(function (TestType) {
    TestType["APPIUM_JAVA_JUNIT"] = "APPIUM_JAVA_JUNIT";
    TestType["APPIUM_JAVA_TESTNG"] = "APPIUM_JAVA_TESTNG";
    TestType["APPIUM_NODE"] = "APPIUM_NODE";
    TestType["APPIUM_PYTHON"] = "APPIUM_PYTHON";
    TestType["APPIUM_RUBY"] = "APPIUM_RUBY";
    TestType["APPIUM_WEB_JAVA_JUNIT"] = "APPIUM_WEB_JAVA_JUNIT";
    TestType["APPIUM_WEB_JAVA_TESTNG"] = "APPIUM_WEB_JAVA_TESTNG";
    TestType["APPIUM_WEB_NODE"] = "APPIUM_WEB_NODE";
    TestType["APPIUM_WEB_PYTHON"] = "APPIUM_WEB_PYTHON";
    TestType["APPIUM_WEB_RUBY"] = "APPIUM_WEB_RUBY";
    TestType["BUILTIN_EXPLORER"] = "BUILTIN_EXPLORER";
    TestType["BUILTIN_FUZZ"] = "BUILTIN_FUZZ";
    TestType["CALABASH"] = "CALABASH";
    TestType["INSTRUMENTATION"] = "INSTRUMENTATION";
    TestType["REMOTE_ACCESS_RECORD"] = "REMOTE_ACCESS_RECORD";
    TestType["REMOTE_ACCESS_REPLAY"] = "REMOTE_ACCESS_REPLAY";
    TestType["UIAUTOMATION"] = "UIAUTOMATION";
    TestType["UIAUTOMATOR"] = "UIAUTOMATOR";
    TestType["WEB_PERFORMANCE_PROFILE"] = "WEB_PERFORMANCE_PROFILE";
    TestType["XCTEST"] = "XCTEST";
    TestType["XCTEST_UI"] = "XCTEST_UI";
})(TestType || (TestType = {}));
export var RecurringChargeFrequency;
(function (RecurringChargeFrequency) {
    RecurringChargeFrequency["MONTHLY"] = "MONTHLY";
})(RecurringChargeFrequency || (RecurringChargeFrequency = {}));
export var OfferingType;
(function (OfferingType) {
    OfferingType["RECURRING"] = "RECURRING";
})(OfferingType || (OfferingType = {}));
export var OfferingTransactionType;
(function (OfferingTransactionType) {
    OfferingTransactionType["PURCHASE"] = "PURCHASE";
    OfferingTransactionType["RENEW"] = "RENEW";
    OfferingTransactionType["SYSTEM"] = "SYSTEM";
})(OfferingTransactionType || (OfferingTransactionType = {}));
export class NotEligibleException extends __BaseException {
    constructor(opts) {
        super({
            name: "NotEligibleException",
            $fault: "client",
            ...opts,
        });
        this.name = "NotEligibleException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NotEligibleException.prototype);
    }
}
export var DeviceFilterAttribute;
(function (DeviceFilterAttribute) {
    DeviceFilterAttribute["ARN"] = "ARN";
    DeviceFilterAttribute["AVAILABILITY"] = "AVAILABILITY";
    DeviceFilterAttribute["FLEET_TYPE"] = "FLEET_TYPE";
    DeviceFilterAttribute["FORM_FACTOR"] = "FORM_FACTOR";
    DeviceFilterAttribute["INSTANCE_ARN"] = "INSTANCE_ARN";
    DeviceFilterAttribute["INSTANCE_LABELS"] = "INSTANCE_LABELS";
    DeviceFilterAttribute["MANUFACTURER"] = "MANUFACTURER";
    DeviceFilterAttribute["MODEL"] = "MODEL";
    DeviceFilterAttribute["OS_VERSION"] = "OS_VERSION";
    DeviceFilterAttribute["PLATFORM"] = "PLATFORM";
    DeviceFilterAttribute["REMOTE_ACCESS_ENABLED"] = "REMOTE_ACCESS_ENABLED";
    DeviceFilterAttribute["REMOTE_DEBUG_ENABLED"] = "REMOTE_DEBUG_ENABLED";
})(DeviceFilterAttribute || (DeviceFilterAttribute = {}));
export var ExecutionResultCode;
(function (ExecutionResultCode) {
    ExecutionResultCode["PARSING_FAILED"] = "PARSING_FAILED";
    ExecutionResultCode["VPC_ENDPOINT_SETUP_FAILED"] = "VPC_ENDPOINT_SETUP_FAILED";
})(ExecutionResultCode || (ExecutionResultCode = {}));
export var TestGridSessionStatus;
(function (TestGridSessionStatus) {
    TestGridSessionStatus["ACTIVE"] = "ACTIVE";
    TestGridSessionStatus["CLOSED"] = "CLOSED";
    TestGridSessionStatus["ERRORED"] = "ERRORED";
})(TestGridSessionStatus || (TestGridSessionStatus = {}));
export var SampleType;
(function (SampleType) {
    SampleType["CPU"] = "CPU";
    SampleType["MEMORY"] = "MEMORY";
    SampleType["NATIVE_AVG_DRAWTIME"] = "NATIVE_AVG_DRAWTIME";
    SampleType["NATIVE_FPS"] = "NATIVE_FPS";
    SampleType["NATIVE_FRAMES"] = "NATIVE_FRAMES";
    SampleType["NATIVE_MAX_DRAWTIME"] = "NATIVE_MAX_DRAWTIME";
    SampleType["NATIVE_MIN_DRAWTIME"] = "NATIVE_MIN_DRAWTIME";
    SampleType["OPENGL_AVG_DRAWTIME"] = "OPENGL_AVG_DRAWTIME";
    SampleType["OPENGL_FPS"] = "OPENGL_FPS";
    SampleType["OPENGL_FRAMES"] = "OPENGL_FRAMES";
    SampleType["OPENGL_MAX_DRAWTIME"] = "OPENGL_MAX_DRAWTIME";
    SampleType["OPENGL_MIN_DRAWTIME"] = "OPENGL_MIN_DRAWTIME";
    SampleType["RX"] = "RX";
    SampleType["RX_RATE"] = "RX_RATE";
    SampleType["THREADS"] = "THREADS";
    SampleType["TX"] = "TX";
    SampleType["TX_RATE"] = "TX_RATE";
})(SampleType || (SampleType = {}));
export var TestGridSessionArtifactCategory;
(function (TestGridSessionArtifactCategory) {
    TestGridSessionArtifactCategory["LOG"] = "LOG";
    TestGridSessionArtifactCategory["VIDEO"] = "VIDEO";
})(TestGridSessionArtifactCategory || (TestGridSessionArtifactCategory = {}));
export var TestGridSessionArtifactType;
(function (TestGridSessionArtifactType) {
    TestGridSessionArtifactType["SELENIUM_LOG"] = "SELENIUM_LOG";
    TestGridSessionArtifactType["UNKNOWN"] = "UNKNOWN";
    TestGridSessionArtifactType["VIDEO"] = "VIDEO";
})(TestGridSessionArtifactType || (TestGridSessionArtifactType = {}));
export class IdempotencyException extends __BaseException {
    constructor(opts) {
        super({
            name: "IdempotencyException",
            $fault: "client",
            ...opts,
        });
        this.name = "IdempotencyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, IdempotencyException.prototype);
    }
}
export class TagPolicyException extends __BaseException {
    constructor(opts) {
        super({
            name: "TagPolicyException",
            $fault: "client",
            ...opts,
        });
        this.name = "TagPolicyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TagPolicyException.prototype);
        this.resourceName = opts.resourceName;
    }
}
export class TooManyTagsException extends __BaseException {
    constructor(opts) {
        super({
            name: "TooManyTagsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyTagsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyTagsException.prototype);
        this.resourceName = opts.resourceName;
    }
}
export const TrialMinutesFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AccountSettingsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ArtifactFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CountersFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CPUFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RuleFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateDevicePoolRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DevicePoolFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateDevicePoolResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateInstanceProfileRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const InstanceProfileFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateInstanceProfileResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateNetworkProfileRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NetworkProfileFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateNetworkProfileResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VpcConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateProjectRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ProjectFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateProjectResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateRemoteAccessSessionConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateRemoteAccessSessionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeviceInstanceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ResolutionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeviceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeviceMinutesFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RemoteAccessSessionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateRemoteAccessSessionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TestGridVpcConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTestGridProjectRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TestGridProjectFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTestGridProjectResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTestGridUrlRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTestGridUrlResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.url && { url: SENSITIVE_STRING }),
});
export const CreateUploadRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UploadFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.url && { url: SENSITIVE_STRING }),
});
export const CreateUploadResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.upload && { upload: UploadFilterSensitiveLog(obj.upload) }),
});
export const CreateVPCEConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VPCEConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVPCEConfigurationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CustomerArtifactPathsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteDevicePoolRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteDevicePoolResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteInstanceProfileRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteInstanceProfileResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteNetworkProfileRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteNetworkProfileResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteProjectRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteProjectResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteRemoteAccessSessionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteRemoteAccessSessionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteRunRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteRunResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteTestGridProjectRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteTestGridProjectResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteUploadRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteUploadResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteVPCEConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteVPCEConfigurationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetAccountSettingsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetAccountSettingsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetDeviceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetDeviceResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetDeviceInstanceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetDeviceInstanceResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetDevicePoolRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetDevicePoolResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LocationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RadiosFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ScheduleRunConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ScheduleRunTestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetDevicePoolCompatibilityRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const IncompatibilityMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DevicePoolCompatibilityResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetDevicePoolCompatibilityResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetInstanceProfileRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetInstanceProfileResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetJobRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const JobFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetJobResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetNetworkProfileRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetNetworkProfileResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetOfferingStatusRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const MonetaryAmountFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RecurringChargeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const OfferingFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const OfferingStatusFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetOfferingStatusResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetProjectRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetProjectResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetRemoteAccessSessionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetRemoteAccessSessionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetRunRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeviceFilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeviceSelectionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RunFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetRunResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetSuiteRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SuiteFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetSuiteResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetTestRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetTestResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetTestGridProjectRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetTestGridProjectResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetTestGridSessionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TestGridSessionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetTestGridSessionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetUploadRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetUploadResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.upload && { upload: UploadFilterSensitiveLog(obj.upload) }),
});
export const GetVPCEConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetVPCEConfigurationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const InstallToRemoteAccessSessionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const InstallToRemoteAccessSessionResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.appUpload && { appUpload: UploadFilterSensitiveLog(obj.appUpload) }),
});
export const ListArtifactsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListArtifactsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListDeviceInstancesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListDeviceInstancesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListDevicePoolsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListDevicePoolsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListDevicesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListDevicesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListInstanceProfilesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListInstanceProfilesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListJobsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListJobsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListNetworkProfilesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListNetworkProfilesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListOfferingPromotionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const OfferingPromotionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListOfferingPromotionsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListOfferingsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListOfferingsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListOfferingTransactionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const OfferingTransactionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListOfferingTransactionsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListProjectsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListProjectsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListRemoteAccessSessionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListRemoteAccessSessionsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListRunsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListRunsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListSamplesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SampleFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListSamplesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListSuitesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListSuitesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTagsForResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TagFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTagsForResourceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTestGridProjectsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTestGridProjectsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTestGridSessionActionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TestGridSessionActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTestGridSessionActionsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTestGridSessionArtifactsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TestGridSessionArtifactFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.url && { url: SENSITIVE_STRING }),
});
export const ListTestGridSessionArtifactsResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.artifacts && { artifacts: obj.artifacts.map((item) => TestGridSessionArtifactFilterSensitiveLog(item)) }),
});
export const ListTestGridSessionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTestGridSessionsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTestsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTestsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListUniqueProblemsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ProblemDetailFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ProblemFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UniqueProblemFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListUniqueProblemsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListUploadsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListUploadsResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.uploads && { uploads: obj.uploads.map((item) => UploadFilterSensitiveLog(item)) }),
});
export const ListVPCEConfigurationsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListVPCEConfigurationsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PurchaseOfferingRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PurchaseOfferingResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RenewOfferingRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RenewOfferingResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeviceSelectionConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ExecutionConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ScheduleRunRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ScheduleRunResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopJobRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopJobResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopRemoteAccessSessionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopRemoteAccessSessionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopRunRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopRunResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TagResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TagResourceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UntagResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UntagResourceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateDeviceInstanceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateDeviceInstanceResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateDevicePoolRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateDevicePoolResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateInstanceProfileRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateInstanceProfileResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateNetworkProfileRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateNetworkProfileResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateProjectRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateProjectResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateTestGridProjectRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateTestGridProjectResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateUploadRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateUploadResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.upload && { upload: UploadFilterSensitiveLog(obj.upload) }),
});
export const UpdateVPCEConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateVPCEConfigurationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
